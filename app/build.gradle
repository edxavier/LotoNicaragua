plugins {
    // alias(libs.plugins.kotlin)
    alias(libs.plugins.compose.compiler)
}
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-kapt'



android {
    compileSdkVersion 35
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    kapt.includeCompileClasspath = false
    buildFeatures {
        compose = true
    }
    composeCompiler {
        enableStrongSkippingMode = true
    }

    defaultConfig {
        applicationId "com.resultados.loto.lotonicaragua"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 30
        versionName "2025.05.1.14.0-loto"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    viewBinding {
        enabled = true
    }
    namespace 'com.resultados.loto.lotonicaragua'
}

dependencies {

    //val composeBom = platform("androidx.compose:compose-bom:2023.01.00")
    implementation platform(libs.compose.bom)
    //androidTestImplementation composeBom
    // Material Design 3
    //implementation("androidx.compose.material3:material3")
    implementation(libs.material)
    implementation(libs.material.icons.extended)

    implementation(libs.foundation)
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation(libs.ui)

    // Android Studio Preview support
    implementation(libs.ui.tooling.preview)
    debugImplementation(libs.ui.tooling)
    // Optional - Integration with activities
    implementation(libs.activity.compose)
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.appcompat
    implementation libs.core.ktx
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation libs.google.material
    implementation libs.constraintlayout
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    implementation libs.lifecycle.extensions
    implementation libs.lifecycle.runtime.ktx
    //kapt("androidx.lifecycle:lifecycle-compiler:2.4.0")
    //annotationProcessor("androidx.lifecycle:lifecycle-compiler:2.4.0")
    implementation(libs.lifecycle.common.java8)


    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    implementation libs.jsoup
    // Kotlin Android Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // Firebase
    implementation libs.firebase.core
    implementation libs.firebase.ads
    implementation libs.firebase.analytics
    // Add the Firebase Crashlytics SDK.
    implementation libs.firebase.crashlytics
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    //noinspection UseTomlInstead
    implementation libs.firebase.config.ktx

    //ANIMATIONS
    //noinspection UseTomlInstead,UseTomlInstead
    implementation 'com.airbnb.android:lottie:6.4.0'

    // Preference
    implementation libs.preference.ktx

    //noinspection UseTomlInstead,UseTomlInstead
    testImplementation 'junit:junit:4.13.2'

    //implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    // MOSHI JSON SERIALIZER
    //implementation("com.squareup.moshi:moshi:$moshVersion")
    implementation(libs.moshi.kotlin)
    kapt(libs.moshi.kotlin.codegen)
    // RETROFIT
    implementation(libs.converter.moshi)
    //noinspection UseTomlInstead
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // CHARTS
    implementation libs.mpandroidchart
    // implementation 'com.google.android.gms:play-services-ads:23.0.0'
}
